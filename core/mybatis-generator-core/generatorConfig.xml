<?xml version="1.0" encoding="UTF-8"?>    
<!DOCTYPE generatorConfiguration    
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"    
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">    
<!-- 第二种mybatis逆向生成xml配置 -->    
<generatorConfiguration>  
<!-- 需要指明数据库连接器的绝对路径 -->
    <classPathEntry  
        location="C:\Users\Administrator\.m2\repository\mysql\mysql-connector-java\5.1.41\mysql-connector-java-5.1.41.jar" />     
    <context id="sqlserverTables" targetRuntime="MyBatis3">    
        <!-- 生成的pojo，将implements Serializable-->    
        <!-- <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin> -->    
		<plugin type="org.mybatis.generator.plugins.ToStringPlugin">
			<property name="useToStringFromRoot" value="true"/>
		</plugin>
		<plugin type="org.mybatis.generator.plugins.RowBoundsPlugin"></plugin>
        <commentGenerator>    
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->    
            <property name="suppressAllComments" value="false" />
            <property name="addRemarkComments" value="true" />
        </commentGenerator>    
    
        <!-- 数据库链接URL、用户名、密码 -->    
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"    
                        connectionURL="jdbc:mysql://172.16.5.40:3306/chss_core_db"    
                        userId="root"
                        password="alockcq@123456">    
        </jdbcConnection>    
    
        <!--      
        默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer    
            true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal      
        -->    
        <javaTypeResolver>    
            <property name="forceBigDecimals" value="false" />    
        </javaTypeResolver>    
		    
        <!--     
        生成model模型，对应的包路径，以及文件存放路径(targetProject)，targetProject可以指定具体的路径,如./src/main/java，    
        也可以使用“MAVEN”来自动生成，这样生成的代码会在target/generatord-source目录下    
        -->    
        <!--<javaModelGenerator targetPackage="com.joey.mybaties.test.pojo" targetProject="MAVEN">-->    
        <javaModelGenerator targetPackage="com.iot.chinamobile.chss.facade.core" targetProject="./">    
            <property name="enableSubPackages" value="true"/>    
            <!-- 从数据库返回的值被清理前后的空格  -->    
            <property name="trimStrings" value="true" />  
			<property name="rootClass" value="com.iot.chinamobile.chss.facade.base.BaseEntity"/>			
        </javaModelGenerator>    
    
        <!--对应的mapper.xml文件  -->    
        <sqlMapGenerator targetPackage="com.iot.chinamobile.chss.core.mapper" targetProject="./">    
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>    
    
        <!-- 对应的Mapper接口类文件 -->    
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.iot.chinamobile.chss.core.mapper" targetProject="./">  
            <property name="enableSubPackages" value="true"/>    
        </javaClientGenerator>    
			
		<table tableName="t_%"    
               enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true"    
               enableSelectByExample="true" selectByExampleQueryId="true" > 
            <property name="useActualColumnNames" value="false"/>    
			<!-- <property name="rootClass" value="com.demo.mybatis.entity.IdEntity"/> -->
            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>   
			<domainObjectRenamingRule searchString="^T" replaceString=""/>
        </table>
    
		<!--
		<table tableName="t_meeting_room" domainObjectName="MeetingRoom"    
               enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true"    
               enableSelectByExample="true" selectByExampleQueryId="true" > 
            <property name="useActualColumnNames" value="false"/>    
			<property name="rootClass" value="com.demo.mybatis.entity.IdEntity"/>
            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>   
        </table>
		 -->
	</context>		
</generatorConfiguration>